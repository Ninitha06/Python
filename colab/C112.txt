print("hello world")

### This is a sample text
# **New Section**


from google.colab import files 
data_to_load = files.upload()


import plotly.express as px 
df = px.data.gapminder().query("country=='Canada'")
fig = px.line(df,x="year",y="lifeExp",title="Life expectancy in Canada")
fig.show()

import pandas as pd
import statistics
import plotly.express as px

from google.colab import files 
data_to_load = files.upload()

df = pd.read_csv("savings_data_final.csv")
#Color given to rem_any field
fig = px.scatter(df,y="quant_saved",color="rem_any")
fig.show()

import csv

with open('savings_data_final.csv',newline="") as f:
  reader = csv.reader(f)
  savings_data = list(reader)
  savings_data.pop(0)

  #finding total number of people and total people reminded

  total_people = len(savings_data)
  total_people_reminded = 0
  for data in savings_data:
    if(int(data[3])==1):
      total_people_reminded = total_people_reminded + 1
    
  import plotly.graph_objects as go
  fig = go.Figure(go.Bar(x=["Reminded","Not Reminded"],y=[total_people_reminded,total_people-total_people_reminded]))
  fig.show()

  all_savings = []

for data in savings_data:
  all_savings.append(float(data[0]))

mean = statistics.mean(all_savings)
median = statistics.median(all_savings)
mode = statistics.mode(all_savings)

print("Mean ",mean)
print("Median ",median)
print("Mode ",mode)


reminded_savings = []
non_reminded_savings = []

for data in savings_data:
  if(int(data[3])==1):
    reminded_savings.append(float(data[0]))
  else:
    non_reminded_savings.append(float(data[0]))

print("Mean of people who were reminded to save",statistics.mean(reminded_savings))
print("Median of people who were reminded to save",statistics.median(reminded_savings))
print("Mode of people who were reminded to save",statistics.mode(reminded_savings))

print("Mean of people who were not reminded to save",statistics.mean(non_reminded_savings))
print("Median of people who were not reminded to save",statistics.median(non_reminded_savings))
print("Mode of people who were not reminded to save",statistics.mode(non_reminded_savings))

print("Standard devivation of all people", statistics.stdev(all_savings))
print("Standard devivation of people who were reminded", statistics.stdev(reminded_savings))
print("Standard devivation of people who were not reminded", statistics.stdev(non_reminded_savings))

import numpy as np

savings=[]
age=[]

for data in savings_data:
  if(float(data[5]!=0)):
    age.append(float(data[5]))
    savings.append(float(data[0]))

correlation = np.corrcoef(age,savings)
print(f"Correlation between the savings and age are {correlation[0,1]}")

import plotly.figure_factory as ff

fig = ff.create_distplot([df["quant_saved"].tolist()],["Savings"],show_hist=False)
fig.show()

